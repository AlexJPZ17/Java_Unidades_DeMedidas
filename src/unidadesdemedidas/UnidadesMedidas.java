/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package unidadesdemedidas;

import javax.swing.JOptionPane;

/**
 *
 * @author Alex
 */
public class UnidadesMedidas extends javax.swing.JFrame {

    /**
     * Creates new form UnidadesMedidas
     */
    public UnidadesMedidas() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea_Medidas = new javax.swing.JTextArea();
        Button_Clean = new javax.swing.JButton();
        Button_Run = new javax.swing.JButton();
        TextField_Valor = new javax.swing.JTextField();
        ComboBox_Unidades = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Medidas");

        jLabel2.setText("Opciones");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        TextArea_Medidas.setColumns(20);
        TextArea_Medidas.setRows(5);
        jScrollPane1.setViewportView(TextArea_Medidas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Button_Clean.setText("Clean");
        Button_Clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_CleanActionPerformed(evt);
            }
        });

        Button_Run.setText("Run");
        Button_Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_RunActionPerformed(evt);
            }
        });

        ComboBox_Unidades.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Unidades a convertir", "Milimetros", "Centimetros", "Pulgadas", "Pies", "Metros", "Yardas", "Kilometros", "Millas" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(Button_Run)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Button_Clean)
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextField_Valor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(ComboBox_Unidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(67, 67, 67))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextField_Valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_Unidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_Clean)
                    .addComponent(Button_Run))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UnidadesDeMedidas(){
       //Declaramos las variables 
        double res1,res2,res3,res4,res5,res6,res7,valor;
        String unidades;
        
        //Condición que valida el TextField_Valor si  esta vacío 
        if (TextField_Valor.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Ingrese un valor a convertir");
            //Coloca el Focus en el TextField_Valor
            TextField_Valor.requestFocus();
        }else{
            /*Función que convierte en un tipo double el valor que se ingrese por 
            el TextField_Valor y lo almacena en la variable valor */
           valor = Double.parseDouble(TextField_Valor.getText());
           //Método para extraer los Item seleccionado en el ComboBox
           unidades = ComboBox_Unidades.getSelectedItem().toString();
           /*Condición que evalúa la variable unidades si es igual a las funciones 
             seleccionada en el ComboBox y si la variable unidades es igual a
             unidades a convertir que ejecute un mensaje*/
            if ("Unidades a convertir".equals(unidades)) {
                JOptionPane.showMessageDialog(null,"Seleccione unas de las unidades a convertir");
                
            }else{
                /* Con la instrucción switch nos ayudara a ejecutar las opciones 
                  seleccionada en el ComboBox de acuerdo a la unidad de medida 
                  que escojamos */
               switch(unidades){
                   case "Milimetros":
                       TextArea_Medidas.setText("");
                       res1= valor * 0.1; 
                       res2= valor * 0.03937;
                       res3= valor * 0.00328084;
                       res4= valor * 0.001;
                       res5= valor * 0.0010936;
                       res6= valor * 0.000001;
                       res7= valor * 0.0000006;
                       TextArea_Medidas.append(res1 + "Centimetros\n"
                                               +res2 + "Pulgadas\n"
                                               +res3 + "Pies\n"
                                               +res4 + "Metros\n"
                                               +res5 + "Yardas\n"
                                               +res6 + "Kimelometros\n"
                                               +res7 + "Millas");
                       break;
                       
                       case "Centimetros":
                       TextArea_Medidas.setText("");
                       res1= valor * 10.0; 
                       res2= valor * 0.3937;
                       res3= valor * 0.0328084;
                       res4= valor * 0.01;
                       res5= valor * 0.010936;
                       res6= valor * 0.00001;
                       res7= valor * 0.000006;
                       TextArea_Medidas.append(res1 + "Milimetros\n"
                                               +res2 + "Pulgadas\n"
                                               +res3 + "Pies\n"
                                               +res4 + "Metros\n"
                                               +res5 + "Yardas\n"
                                               +res6 + "Kimelometros\n"
                                               +res7 + "Millas");
                       break;
                           
                    case "Pulgadas":
                        TextArea_Medidas.setText("");
                       res1= valor * 25.4;
                       res2= valor * 2.54;
                       res3= valor * 0.083;
                       res4= valor * 0.0254;
                       res5= valor * 0.027;
                       res6= valor * 0.0000254;
                       res7= valor * 0.0000158;
                       TextArea_Medidas.append( +res1 + " Milimetros\n"
                                               +res2 + " Centimetros\n"
                                               +res3 + " Pies\n"
                                               +res4 + " Metros\n"
                                               +res5 + " Yardas\n"
                                               +res6+ " Kilometros\n"
                                               +res7 +" Millas");
                    break;
                   case "Pies":
                       TextArea_Medidas.setText("");
                       res1= valor * 304.8;
                       res2= valor * 30.48;
                       res3= valor * 12;
                       res4= valor * 0.3048;
                       res5= valor * 0.33;
                       res6= valor * 0.0003048;
                       res7= valor * 0.0001894;
                       TextArea_Medidas.append( +res1 + " Milimetros\n"
                                               +res2 + " Centimetros\n"
                                               +res3 + " Pulgadas\n"
                                               +res4 + " Metros\n"
                                               +res5 + " Yardas\n"
                                               +res6+ " Kilometros\n"
                                               +res7 +" Millas");
                    break;
                   case "Metros":
                       TextArea_Medidas.setText("");
                       res1= valor * 1000;
                       res2= valor * 100;
                       res3= valor * 39.37008;
                       res4= valor * 3.28084;
                       res5= valor * 1.09361;
                       res6= valor * 0.001;
                       res7= valor * 0.00062;
                       TextArea_Medidas.append( +res1 + " Milimetros\n"
                                               +res2 + " Centimetros\n"
                                               +res3 + " Pulgadas\n"
                                               +res4 + " Pies\n"
                                               +res5 + " Yardas\n"
                                               +res6+ " Kilometros\n"
                                               +res7 +" Millas");
                    break;

                   case "Yardas":
                       TextArea_Medidas.setText("");
                       res1= valor * 914.4;
                       res2= valor * 91.44;
                       res3= valor * 36;
                       res4= valor * 3;
                       res5= valor * 0.9144;
                       res6= valor * 0.0009144;
                       res7= valor * 0.00056;
                       TextArea_Medidas.append( +res1 + " Milimetros\n"
                                               +res2 + " Centimetros\n"
                                               +res3 + " Pulgadas\n"
                                               +res4 + " Pies\n"
                                               +res5 + " Metros\n"
                                               +res6+ " Kilsometros\n"
                                               +res7 +" Millas");
                    break;
                    case "Kilometros":
                        TextArea_Medidas.setText("");
                       res1= valor * 1000000;
                       res2= valor * 100000;
                       res3= valor * 39370.08;
                       res4= valor * 3280.84;
                       res5= valor * 1000;
                       res6= valor * 1093.613;
                       res7= valor * 0.62137;
                       TextArea_Medidas.append( +res1 + " Milimetros\n"
                                               +res2 + " Centimetros\n"
                                               +res3 + " Pulgadas\n"
                                               +res4 + " Pies\n"
                                               +res5 + " Metros\n"
                                               +res6+ " Yardas\n"
                                               +res7 +" Millas");
                    break;
                   case "Millas":
                       TextArea_Medidas.setText("");
                       res1= valor * 1609344;
                       res2= valor * 160934.4;
                       res3= valor * 63360;
                       res4= valor * 5280;
                       res5= valor * 1609.344;
                       res6= valor * 1760;
                       res7= valor * 1.60934;
                       TextArea_Medidas.append( +res1 + " Milimetros\n"
                                               +res2 + " Centimetros\n"
                                               +res3 + " Pulgadas\n"
                                               +res4 + " Pies\n"
                                               +res5 + " Metros\n"
                                               +res6+ " Yardas\n"
                                               +res7 +" Kilometros");
                    break;

               }
            }
        }
    }
    private void Button_CleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_CleanActionPerformed
        TextField_Valor.setText("");
        TextField_Valor.requestFocus();
        TextArea_Medidas.setText("");
        ComboBox_Unidades.setSelectedItem("Unidades a convertir");

    }//GEN-LAST:event_Button_CleanActionPerformed

    private void Button_RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_RunActionPerformed
        UnidadesDeMedidas();
    }//GEN-LAST:event_Button_RunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnidadesMedidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnidadesMedidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnidadesMedidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnidadesMedidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UnidadesMedidas().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Clean;
    private javax.swing.JButton Button_Run;
    private javax.swing.JComboBox ComboBox_Unidades;
    private javax.swing.JTextArea TextArea_Medidas;
    private javax.swing.JTextField TextField_Valor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
